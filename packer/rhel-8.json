{

  "variables": {
    "aws_region": "",
    "vpc_id": "",
    "subnet_id": "",

    "rke2_version": "v1.19.7+rke2r1",

    "ami_name": "rhel8",
    "ami_description": "An RKE2 base image based on RHEL 8 Build Date: {{ isotime }}",

    "source_ami_name": "RHEL-8.3*",
    "source_ami_owner": "309956199498",
    "source_ami_owner_govcloud": "219670896067",
    "source_ami_ssh_user": "ec2-user",

    "http_proxy": "",
    "https_proxy": "",
    "no_proxy": "",

    "hardening": "stig",
    "encrypted": "false",
    "kms_key_id": ""
  },

  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "ami_regions": "us-gov-west-1",
      "source_ami_filter": {
        "filters": {
          "name": "{{user `source_ami_name`}}",
          "root-device-type": "ebs",
          "state": "available",
          "virtualization-type": "hvm",
          "architecture": "x86_64"
        },
        "owners": [ "{{user `source_ami_owner`}}", "{{user `source_ami_owner_govcloud`}}" ],
        "most_recent": true
      },
      "instance_type": "m5.large",
      "ssh_username": "{{user `source_ami_ssh_user`}}",
      "subnet_id": "{{user `subnet_id`}}",
      "encrypt_boot": "{{user `encrypted`}}",
      "kms_key_id": "{{user `kms_key_id`}}",
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/sda1",
          "volume_size": 25,
          "volume_type": "gp2",
          "encrypted": "{{user `encrypted`}}",
          "kms_key_id": "{{user `kms_key_id`}}",
          "delete_on_termination": true
        }
      ],
      "tags": {
        "Name": "rke2-{{user `ami_name`}}-{{user `hardening`}}-{{ timestamp }}",
        "BuildDate": "{{ isotime }}",
        "RKE2-Version": "{{user `rke2_version`}}",
        "RKE2-BuildDate": "{{user `rke2_build_date`}}",
        "Hardening": "{{user `hardening`}}"
      },
      "ami_name": "rke2-{{user `ami_name`}}-{{user `hardening`}}-{{ timestamp }}",
      "ami_description": "{{user `ami_description` }}",
      "ami_virtualization_type": "hvm",
      "run_tags": {
        "Name": "packer-builder-rke2-{{user `ami_name`}}-{{user `hardening`}}-ami"
      }
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "inline": "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 5; done",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "shell",
      "inline": "sudo lsblk",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "ansible",
      "playbook_file": "../ansible/rke2.yml",
      "galaxy_file": "../ansible/requirements.yml",
      "user": "{{user `source_ami_ssh_user`}}",
      "ansible_env_vars": [
        "ANSIBLE_REMOTE_TEMP='/tmp/.ansible/'"
      ],
      "extra_arguments": [
        "-vv",
        "--extra-vars",
        "ansible_python_interpreter=/usr/libexec/platform-python aws_region={{user `aws_region`}} rke2_version={{user `rke2_version`}} hardening={{user `hardening`}} http_proxy={{user `http_proxy` }} https_proxy={{user `https_proxy` }} no_proxy={{user `no_proxy` }}"
      ]
    },
    {
      "type": "shell",
      "inline": "sudo oscap xccdf eval --fetch-remote-resources --profile xccdf_org.ssgproject.content_profile_stig --stig-viewer /tmp/stig-viewer-results.xml --results /tmp/xccdf-results.xml --results-arf /tmp/arf-results.xml --report /tmp/report.html /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml && 2>/dev/null || exit 0",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "shell",
      "inline": "sudo chown {{user `source_ami_ssh_user`}} /tmp/arf-results.xml /tmp/report.html /tmp/xccdf-results.xml /tmp/stig-viewer-results.xml",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "file",
      "source": "/tmp/arf-results.xml",
      "destination": "arf-results.xml",
      "direction": "download"
    },
    {
      "type": "file",
      "source": "/tmp/stig-viewer-results.xml",
      "destination": "stig-viewer-results.xml",
      "direction": "download"
    },
    {
      "type": "file",
      "source": "/tmp/xccdf-results.xml",
      "destination": "xccdf-results.xml",
      "direction": "download"
    },
    {
      "type": "file",
      "source": "/tmp/report.html",
      "destination": "report.html",
      "direction": "download"
    }
  ],
  "post-processors": [
    [
      {
        "type": "artifice",
        "files": ["report.html", "arf-results.xml", "xccdf-results.xml", "stig-viewer-results.xml"]
      },
      {
        "type": "compress",
        "output": "results.tar.gz"
      }
    ]
  ]
}
